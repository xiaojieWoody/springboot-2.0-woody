<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.woodyfine.test.TestDao">

    <resultMap id="userMap" type="com.woodyfine.test.UserBean">
        <id property="id" javaType="long" column="id" jdbcType="BIGINT" />
        <result property="name" javaType="String" column="name" jdbcType="VARCHAR"/>
        <result property="sex" javaType="Integer" column="sex" jdbcType="TINYINT"/>
        <result property="age" javaType="Integer" column="age" jdbcType="TINYINT"/>
        <result property="addr" javaType="String" column="addr" jdbcType="VARCHAR"/>
        <result property="createTime" javaType="String" column="create_time" jdbcType="TIMESTAMP"/>

    </resultMap>

    <sql id="property">
        id, name, age, sex, addr, create_time
    </sql>

    <sql id="queryConditions">
        <where>
            1 = 1
            <if test="name != null and name !=''">
                and name like concat('%',#{name},'%')
            </if>
            <if test="addr != null and addr !=''">
                and addr like concat('%',#{addr},'%')
            </if>
            <if test="sex != null ">
                and sex = #{sex}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
        </where>
    </sql>

    <insert id="insertUser">
        insert into users (name, age, sex, addr, create_time) values (#{name}, #{age}, #{sex}, #{addr}, NOW())
    </insert>

    <update id="updateUser">
        update users
        <set>
            <if test="name != null and name !=''">
                name = #{name},
            </if>
            <if test="age != null ">
                age = #{age},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="addr != null and addr !=''">
                adiddr = #{addr},
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="deleteUser">
        delete from users where id = #{id}
    </delete>

    <select id="findUserById" resultMap="userMap">
        select
        <include refid="property" />
        from users
        where id = #{id}
    </select>

    <select id="findUser" resultMap="userMap">
        select <include refid="property" />
        from users
        <include refid="queryConditions"/>
    </select>

    <select id="pageUser" resultMap="userMap">
        select <include refid="property" />
        from users
        <include refid="queryConditions"/>
        order by create_time desc
        limit #{startIndex}, #{pageSize}
    </select>

    <select id="totalUser" resultType="java.lang.Integer">
        select count(id)
        from users
        <include refid="queryConditions"/>
    </select>
</mapper>